// intermediate stage, where we were able to get the detaieled score card on clicking the match cards

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Live Cricket Matches</title>
    <style>
        /* Reset default margin and padding */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Body styling */
        body {
            font-family: Arial, sans-serif;
            background-color: #fff;
            padding-top: 80px;
            /* Adjust padding to avoid overlap with fixed navbar */
        }

        /* Navigation bar styles */
        .navigation {
            padding: 20px 50px;
            position: fixed;
            top: 0;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
            z-index: 1000;
            background-color: #dce4eb;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .navigation_center {
            display: flex;
            gap: 20px;
        }

        .navigation_buttons {
            background-color: rgba(100, 142, 187, 0.222);
            color: rgb(83, 25, 25);
            border: none;
            padding: 10px 30px;
            box-shadow: 6px 5px;
            font-size: 16px;
            cursor: pointer;
            transition: color 0.4s, transform 0.3s;
        }

        .navigation_buttons:hover {
            color: rgb(62, 131, 160);
            transform: scale(1.06);
        }

        .navigation_search {
            margin-right: -800px;
        }

        .navigation_searchbutton {
            width: 20px;
            background-color: transparent;
            border: none;
            cursor: pointer;
            transition: transform 0.3s;
        }

        .navigation_searchbutton:hover {
            transform: scale(1.1);
        }

        .navigation_avatar {
            width: 40px;
            border-radius: 50%;
        }

        /* Matches container styles */
        #matchesContainer {
            background-color: rgb(172, 234, 234);
            padding: 20px;
        }

        .match-type-container {
            position: relative;
            margin-bottom: 40px;
        }

        .match-type {
            margin-bottom: 10px;
        }

        .match-type h2 {
            margin-bottom: 10px;
            color: #131313;
        }

        .match-cards-wrapper {
            position: relative;
            overflow: hidden;
            padding: 0 40px;
        }

        .match-cards {
            display: inline-flex;
            transition: transform 0.3s ease;
        }

        .match-card {
            background-color: #fff;
            border: 1px solid #ccc;
            padding: 15px;
            margin-right: 10px;
            border-radius: 20px;
            box-shadow: inset -11px 2px 37px rgb(0 0 0 / 18%);
            cursor: pointer;
            transition: box-shadow 0.3s;
            flex: 0 0 auto;
        }

        .match-card:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .match-card h3 {
            margin: 0 0 5px 0;
            color: #555;
        }

        .match-card p {
            margin: 5px 0;
            color: #777;
        }

        .scroll-button {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background-color: rgba(255, 255, 255, 0.8);
            border: none;
            cursor: pointer;
            padding: 10px;
            z-index: 1;
        }

        .scroll-button.left {
            left: 0;
        }

        .scroll-button.right {
            right: 0;
        }

        /* Popup modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0, 0, 0);
            background-color: rgba(0, 0, 0, 0.4);
            padding-top: 60px;
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            border-radius: 10px;
        }

        .scorecard-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .team-details,
        .match-details {
            flex: 1;
        }

        .team-name {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .team-score {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .match-status {
            font-size: 18px;
            margin-bottom: 10px;
        }

        .scorecard-body {
            display: flex;
            justify-content: space-between;
        }

        .batting-details,
        .bowling-details {
            flex: 1;
        }

        .batting-details h3,
        .bowling-details h3 {
            margin-bottom: 10px;
        }

        .batting-details p,
        .bowling-details p {
            margin: 5px 0;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>

<body>
    <!-- Navigation bar -->
    <div class="navigation">
        <div class="navigation_center">
            <button class="navigation_buttons">Home</button>
            <button class="navigation_buttons">Schedule</button>
            <button class="navigation_buttons">Results</button>
            <button class="navigation_buttons">News</button>
        </div>
        <div class="navigation_search">
            <img src="searchphoto.png" alt="Search" class="navigation_searchbutton">
        </div>
        <div class="navigation_right">
            <img src="logo.jpg" alt="nav_avatar" class="navigation_avatar">
        </div>
    </div>

    <!-- Matches container -->
    <div id="matchesContainer">
        <!-- Matches will be dynamically added here -->
    </div>

    <!-- Popup modal for detailed scorecard -->
    <div id="scorecardModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <div class="scorecard-header">
                <div class="team-details">
                    <h2 class="team-name" id="battingTeam"></h2>
                    <ul class="team-score" id="battingScore"></ul>
                </div>
                <div class="match-details">
                    <h2 class="match-status" id="matchStatus"></h2>
                    <ul class="match-info" id="matchInfo"></ul>
                </div>
                <div class="team-details">
                    <h2 class="team-name" id="bowlingTeam"></h2>
                    <ul class="team-score" id="bowlingScore"></ul>
                </div>
            </div>
            <div class="scorecard-body">
                <div class="batting-details" id="battingDetails"></div>
                <div class="bowling-details" id="bowlingDetails"></div>
            </div>
        </div>
    </div>

    <script>
        let scheduleData = {};

        async function fetchLiveMatches() {
            const url = 'https://cricbuzz-cricket.p.rapidapi.com/matches/v1/recent';
            const options = {
                method: 'GET',
                headers: {
                    'X-RapidAPI-Key': '9cb00b926bmshde1a760958fcfbep1d0ffejsna7b7439009ef',
                    'X-RapidAPI-Host': 'cricbuzz-cricket.p.rapidapi.com'
                }
            };

            try {
                const response = await fetch(url, options);
                const result = await response.json();
                console.log(result);
                displayMatches(result);
            } catch (error) {
                console.error(error);
            }
        }



        function displayMatches(data) {
            const matchesContainer = document.getElementById('matchesContainer');
            matchesContainer.innerHTML = ''; // Clear previous matches

            data.typeMatches.forEach(matchType => {
                const matchTypeContainer = document.createElement('div');
                matchTypeContainer.classList.add('match-type-container');

                const matchTypeDiv = document.createElement('div');
                matchTypeDiv.classList.add('match-type');

                const matchTypeHeading = document.createElement('h2');
                matchTypeHeading.textContent = matchType.matchType;
                matchTypeDiv.appendChild(matchTypeHeading);

                matchTypeContainer.appendChild(matchTypeDiv);

                const matchCardsWrapper = document.createElement('div');
                matchCardsWrapper.classList.add('match-cards-wrapper');

                const matchCardsDiv = document.createElement('div');
                matchCardsDiv.classList.add('match-cards');

                matchType.seriesMatches.forEach(series => {
                    const seriesAdWrapper = series.seriesAdWrapper;

                    if (seriesAdWrapper && seriesAdWrapper.seriesName && seriesAdWrapper.matches) {
                        seriesAdWrapper.matches.forEach(match => {
                            const matchInfo = match.matchInfo;

                            const matchCard = document.createElement('div');
                            matchCard.classList.add('match-card');
                            matchCard.innerHTML = `
                                <h3>${seriesAdWrapper.seriesName}</h3>
                                <p>${matchInfo.team1.teamName} vs ${matchInfo.team2.teamName}</p>
                                <p>Status: ${matchInfo.status}</p>
                            `;
                            matchCard.onclick = () => fetchDetailedScorecard(matchInfo.matchId);

                            matchCardsDiv.appendChild(matchCard);
                        });
                    }
                });

                matchCardsWrapper.appendChild(matchCardsDiv);

                const leftButton = document.createElement('button');
                leftButton.classList.add('scroll-button', 'left');
                leftButton.innerHTML = '&#9664;';
                leftButton.onclick = () => {
                    matchCardsWrapper.scrollBy({
                        left: -300,
                        behavior: 'smooth'
                    });
                };

                const rightButton = document.createElement('button');
                rightButton.classList.add('scroll-button', 'right');
                rightButton.innerHTML = '&#9654;';
                rightButton.onclick = () => {
                    matchCardsWrapper.scrollBy({
                        left: 300,
                        behavior: 'smooth'
                    });
                };

                matchTypeContainer.appendChild(leftButton);
                matchTypeContainer.appendChild(matchCardsWrapper);
                matchTypeContainer.appendChild(rightButton);

                matchesContainer.appendChild(matchTypeContainer);
            });
        }

        async function fetchDetailedScorecard(matchId) {
            const url = `https://cricbuzz-cricket.p.rapidapi.com/mcenter/v1/${matchId}/scard`;
            const options = {
                method: 'GET',
                headers: {
                    'X-RapidAPI-Key': '9cb00b926bmshde1a760958fcfbep1d0ffejsna7b7439009ef',
                    'X-RapidAPI-Host': 'cricbuzz-cricket.p.rapidapi.com'
                }
            };

            try {
                const response = await fetch(url, options);
                const result = await response.json();
                console.log(result);
                displayScorecard(result, matchId);
            } catch (error) {
                console.error(error);
            }
        }

        function displayScorecard(data, matchId) {
            const modal = document.getElementById('scorecardModal');
            const battingTeamElem = document.getElementById('battingTeam');
            const battingScoreElem = document.getElementById('battingScore');
            const matchStatusElem = document.getElementById('matchStatus');
            const matchInfoElem = document.getElementById('matchInfo');
            const bowlingTeamElem = document.getElementById('bowlingTeam');
            const bowlingScoreElem = document.getElementById('bowlingScore');
            const battingDetailsElem = document.getElementById('battingDetails');
            const bowlingDetailsElem = document.getElementById('bowlingDetails');

            // Clear previous content
            battingTeamElem.textContent = '';
            battingScoreElem.innerHTML = '';
            matchStatusElem.textContent = '';
            matchInfoElem.innerHTML = '';
            bowlingTeamElem.textContent = '';
            bowlingScoreElem.innerHTML = '';
            battingDetailsElem.innerHTML = '';
            bowlingDetailsElem.innerHTML = '';

            if (!data || !data.scoreCard || data.scoreCard.length === 0) {
                console.error('Invalid data format:', data);
                return;
            }

            const scoreCard = data.scoreCard[0]; // Example: Get the first scoreCard (adjust as needed)
            const batTeamDetails = scoreCard.batTeamDetails;
            const bowlTeamDetails = scoreCard.bowlTeamDetails;

            battingTeamElem.textContent = batTeamDetails.batTeamName || 'N/A';
            bowlingTeamElem.textContent = bowlTeamDetails.bowlTeamName || 'N/A';

            matchStatusElem.textContent = data.status || 'N/A';
            matchInfoElem.innerHTML = `
                <li>Match: ${data.seriesName || 'N/A'}</li>
                <li>Date: ${scheduleData[matchId] || 'N/A'}</li>
                <li>Venue: ${data.venue?.name || 'N/A'}, ${data.venue?.location || 'N/A'}</li>
            `;

            battingScoreElem.innerHTML = `
                <li>Total: ${batTeamDetails.runs || 0}/${batTeamDetails.wickets || 0}</li>
                <li>Overs: ${batTeamDetails.overs || 'N/A'}</li>
            `;

            bowlingScoreElem.innerHTML = `
                <li>Total: ${bowlTeamDetails.runs || 0}/${bowlTeamDetails.wickets || 0}</li>
                <li>Overs: ${bowlTeamDetails.overs || 'N/A'}</li>
            `;

            battingDetailsElem.innerHTML = `
                <h3>${batTeamDetails.batTeamName || 'N/A'} Innings</h3>
                ${Object.values(batTeamDetails.batsmenData).map(batsman => `
                    <p>${batsman.batName || 'N/A'}: ${batsman.runs || 0} (${batsman.balls || 0}) - ${batsman.outDesc || 'N/A'}</p>
                `).join('')}
            `;

            bowlingDetailsElem.innerHTML = `
                <h3>${bowlTeamDetails.bowlTeamName || 'N/A'} Bowling</h3>
                ${Object.values(bowlTeamDetails.bowlersData).map(bowler => `
                    <p>${bowler.bowlName || 'N/A'}: ${bowler.overs || 'N/A'} overs, ${bowler.runs || 0} runs, ${bowler.wickets || 0} wickets</p>
                `).join('')}
            `;

            modal.style.display = 'block';
        }

        function closeModal() {
            document.getElementById('scorecardModal').style.display = 'none';
        }

        // Close the modal when the user clicks anywhere outside of the modal
        window.onclick = function(event) {
            const modal = document.getElementById('scorecardModal');
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }

            // Fetch and display live matches on page load
            fetchLiveMatches();



   
    </script>
</body>

</html>
